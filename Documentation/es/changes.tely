\input texinfo @c -*- coding: utf-8; mode: texinfo; documentlanguage: es -*-
@ignore
    Translation of GIT committish: 9891c98f11b06bdfa26040ca42d3be2be0a9a4a6

    When revising a translation, copy the HEAD committish of the
    version that you are working on.  For details, see the Contributors'
    Guide, node Updating translation committishes..
@end ignore
@setfilename lilypond-changes.info
@settitle Registro de cambios de LilyPond
@documentencoding UTF-8

@include macros.itexi

@ifhtml
@macro inputfileref{DIR,NAME}
@uref{../../\DIR\/collated-files.html#\NAME\,@file{\DIR\/\NAME\}}@c
@end macro
@macro usermanref{NAME}
@inforef{\NAME\,,../user/lilypond/lilypond}@c
@end macro
@end ifhtml

@ifnothtml
@macro inputfileref{DIR,NAME}
@file{\DIR\/\NAME\}@c
@end macro
@macro usermanref{NAME}
Véase el manual del usuario, \NAME\
@end macro
@end ifnothtml

@macro textanchor{NAME}
@html
<a name="\NAME\"></a>
@end html
@end macro


@documentencoding UTF-8
@documentlanguage es
@afourpaper
@c Translators: Francisco Vila

@finalout

@node Top
@top Funcionalidades nuevas de la versión 2.22 desde la 2.20

@iftex
@allowcodebreaks false
@end iftex

@itemize

@ignore

HINTS

* add new items at the top

* only show verbatim input for syntax/input changes

* try to be as brief possible in those cases

* don't try to provide real-world examples, they often get too big,
which scares away people.

* Write complete sentences.

* only show user-visible changes.

@end ignore


@item
Ahora se contemplan los marcadores de PDF y permiten que las
entradas de @code{\tocItem} aparezcan dentro del panel de @q{tabla
de contenidos} de los visores de PDF que lo permiten.

@item
@code{\table-of-contents} ahora acepta una estructura jerárquica;
las entradas de @code{\tocItem} pueden opcionalmente aceptar un
símbolo (como @code{\label}) o una lista de símbolos separados por
puntos, indicando su posición dentro de la estructura de la
partitura. Un efecto secundario de esta funcionalidad es que
@code{\tocItem} ya no puede tomar una simple cadena como
argumento; se debe utilizar una instrucción @code{\markup}.
@example
\tocItem \markup "Entrada principal"
\tocItem symbol "Entrada principal con nombre"
\tocItem symbol.list "Entrada secundaria (de segundo nivel)"
@end example


@item
Ahora se puede repetir un guión de letra al comienzo de un sistema
que comienza con una sílaba nueva:
@lilypond[quote]
\relative {
  d'8^( e f e f4) \bar "" \break
  e4
}
\addlyrics {
  \override LyricHyphen.after-line-breaking = ##t
  A -- men.
}
@end lilypond


@item
Ahora se pueden usar colores de estilo CSS directamente como
cadenas de texto; ya sea como nombres de color predefinidos (como
ocurre con la función @code{css-color} que ya está disponible), o
con códigos de color hexadecimales con el prefijo @code{#}.  Todos
los sellos o stencils que contemplan una propiedad @code{color}
ahora aceptan tanto una lista como una cadena; en este último
caso, la cadena se utiliza directamente en la salida de SVG.  Esto
permite usar transparencia alpha (introducido como "#RRGGBBAA" o
"#RGBA") dentro del SVG.

@lilypond[verbatim,quote,fragment]
\override NoteHead.color = "lightsalmon"
\override Flag.color = "#E30074"
\override Beam.color = "#5e45ad"
\override Rest.color = "#3058"
g'8 \huge r4 a'16 f'
@end lilypond


@item
Es posible obtener salida de SVG a través de la opción de línea de
órdenes @code{--svg} (o su forma canónica @code{--format=svg}, que
también se puede abreviar como @code{-fsvg}).  A causa de su
especificidad respetco al backend, esa opción no es compatible aún
con otros formatos de salida; para obtener un archivo en los dos
formatos SVG y PDF, PNG o EPS, es necesaria otra ejecución del
programa LilyPond.


@item
COmo se anunció en la versión 2.17.3 hace casi ocho años, la
opción @code{'relative-includes} está activada de forma
predeterminada; los archivos de inclusión que contienen a su vez
alguna instrucción @code{\include}, deben tener en cuenta su
propia ruta en lugar del directorio del archivo principal.  Sin
embargo, este comportamiento se puede desactivar mediante el
establecimiento de @code{'relative-includes} al valor falso
@code{#f}, ya sea como una opción de la línea de órdenes o
utilizando @code{ly:set-option} dentro de los archivos de entrada.


@item
Los grupos de valoración especial se pueden imprimir ahora
con ligaduras en lugar de corchetes:
@lilypond[quote, verbatim]
\relative {
  \tuplet 3/2 4 {
    \override TupletBracket.tuplet-slur = ##t
    c'4 e8 d4 f8
    \override TupletBracket.bracket-visibility = ##t
    e f g f e d
  } c1
}
@end lilypond


@item
La palabra clave @code{\compressFullBarRests} ha cambiado su
nombre por @code{\compressEmptyMeasures}, para evitar cualquier
confusión con @code{\compressMMRests}.  De manera similar,
@code{\expandFullBarRests} es ahora @code{\expandEmptyMeasures}.


@item
Un cambio progresivo en una vocal (o en una consonante mantenida)
puede indicarse añadiendo una transición de vocal entre sílabas de
la letra con la instrucción @code{\vowelTransition}.
@lilypond[verbatim,quote]
{ g'2 g' } \addlyrics { Ah
\vowelTransition oh. }
@end lilypond


@item
LilyPond para Windows (MinGW) maneja correctamente nombres de
archivo en Unicode sobre Windows 10 1903 o superior.


@item
El barrado francés (@code{\override Stem.french-beaming = ##t}) se
comporta ahora @emph{exactamente} como el barrado estándar (o
predeterminado) a todos los efectos (posicionamiento de cualquier
articulación respecto de la barra, digitaciones, etc.).  La única
diferencia que aún permanece es que las plicas interiores no
atraviesan las barras.
@lilypond[quote]
testmusic = \relative {
  \omit Staff.Clef
  \omit Staff.TimeSignature
  \cadenzaOn
  c''8[ a16 a_^ e']
  f32[_5 c_3 a64_> g]_>]
  a,32[ b^( c a16]
  e'32[ g) a16 r] |
  \override Beam.auto-knee-gap = #1
  a,64[ 64 f''64 64]
  \tuplet 3/2 { c32[ 32 32] }
  \override Beam.grow-direction = #RIGHT
  \featherDurations #(ly:make-moment 2/3)
  { d,32[^1 e^2 f^3 g^4 a^5] } s64
}
\score {
  <<
    \new Staff \with { \override Stem.french-beaming = ##t }
         { <>^"French" \testmusic }
    \new Staff
         { <>^"Default" \testmusic }
  >>
  \layout { indent = 0 }
}
@end lilypond


@item
Los nombres de nota en cuartos de tono ahora están disponibles en
todos los idiomas de entrada.
@lilypond[verbatim,quote]
\language "català"
\relative { do'4 sol' miqb re do1 }
@end lilypond


@item
Todos los idiomas de entrada (instrucción @code{\language}) se
pueden introducir utilizando su nombre exacto codificado en UTF-8
(esto es, incluyendo caracteres especiales). Ahora se pueden usar
los nombres que faltaban, @code{català} y @code{português}, además
de los originales @code{catalan} y @code{portugues}.


@item
La configuración de @code{suggestAccidentals} a @code{'cautionary}
convierte en alteraciones sugeridas @code{AccidentalSuggestion}s
(por encima) solamente las alteraciones de precaución o de
cortesía. Esto se puede usar para diferenciar entre alteraciones
editoriales y de facsímil.
@lilypond[verbatim,quote]
\relative {
  \key d \minor
  d''4 cis8 b? cis2
  \set suggestAccidentals = ##t
  d4 cis8 b? cis2
  \set suggestAccidentals = #'cautionary
  d4 cis8 b? cis2
}
@end lilypond


@item
Se ha añadido la instrucción @code{\ambitusAfter}.  Se usa para
desplazar la indicación de ámbito o tesitura a una posición
distinta.
@lilypond[verbatim,quote]
\new Staff \with {
  \consists Ambitus_engraver
} \relative {
  \ambitusAfter key-signature
  \key d \major
  es'8 g bes cis d2
}
@end lilypond


@item
Se han añadido las variantes de calderón muy corto y de Henze a
los calderones largo y corto.
@lilypond[verbatim,quote]
{
  c'1\veryshortfermata
  c'2\henzeshortfermata c'\henzelongfermata
}
@end lilypond


@item
Ahora se pueden añadir calderones y otras articulaciones
directamente a los silencios multi-compás.  Como consecuencia, se
convierte en obsoleta la instrucción @code{\fermataMarkup}.
@lilypond[verbatim,quote]
{
  R1\fermata
  R->
  R\coda
}
@end lilypond


@item
Ahora se pueden aplicar patrones rítmicos irregulares y de Swing a
expresiones musicales compuestas por duraciones regulares, algo
que puede utilizarse para generar interpretaciones rítmicas
desiguales en el MIDI.
@lilypond[verbatim,quote]
\include "swing.ly"
<<
  \new Staff \with {
    instrumentName = "ordinary"
  } \repeat unfold 8 c'8
  \new Staff \with {
    instrumentName = "with swing"
  } \repeat unfold 4 \tripletFeel 8 { c'8 c' }
  \new Staff \with {
    instrumentName = "triplets"
  } \tuplet 3/2 4 \repeat unfold 12 c'8
>>
@end lilypond

@item
Ahora se pueden invertir automáticamente los acordes con notas
suprimidas.
@lilypond[verbatim,quote]
\chordmode {
  \dropNote 2 {
    c2:maj7 d:m7
  }
  \invertChords 1 d1:maj7
}
@end lilypond

@item
Se han arreglado algunos diagramas de posiciones de acordes para
los trastes del ukelele, y se han añadido algunos nuevos.

@item
Las funciones antiguas de nomenclatura de acordes
@code{banter-chord-names} y @code{jazz-chord-names} se han
eliminado del código principal, así como las propiedades
@code{chordNamesExceptionsFull} y
@code{chordNamesExceptionsPartial}.  Como parte de dicha
remodelación, los acordes @q{de potencia} están incluidos ahora
dentro de las excepciones predeterminadas; se imprimen
correctamente (con un superíndice como el resto de los acordes) y
sin que sea necesario ningún otro trucaje adicional, suprimiendo
así la necesidad de la instrucción predefinida
@code{\\powerChords}.  Las personas interesadas en las funciones
antiguas que se mantenían por compatibilidad tienen una copia
bastante funcional en el fragmento de código
@file{chord-names-alternative.ly}.

@item
La instrucción @code{\\partcombine}, así como todas las
instrucciones, subrutinas y nombres de propiedad que llevaban el
prefijo @code{partCombine} se escriben ahora con C mayúscula, tal
y como @code{\\partCombine}, @code{\\partCombineApart}, etc.  La
instrucción @code{\\autochange} se escribe también con la C
mayúscula como @code{\\autoChange}.

@item
EL grabador @code{New_fingering_engraver} tiene en cuenta ahora la
propiedad @code{X-align-on-main-noteheads} del
@code{self-alignment-interface}.  Si se establece al valor
verdadero (@code{##t}), todas las digitaciones orientadas hacia
arriba o hacia abajo (@code{up} o @code{down}) se disponen en una
columna normal y se alinean sobre las cabezas de nota en el lado
correcto de la cabeza de la figura:
@lilypond[verbatim,quote]
{
  \set fingeringOrientations = #'(up)
  <e'-1 d''-4 e''-5>4 <a'-1 b'-2 fis''-5>
  \set fingeringOrientations = #'(down)
  <e'-1 d''-4 e''-5> <eis'-1 e''-4 fis''-5>
  \bar "."
  \override Fingering.X-align-on-main-noteheads = ##t
  \set fingeringOrientations = #'(up)
  <e'-1 d''-4 e''-5> <a'-1 b'-2 fis''-5>
  \set fingeringOrientations = #'(down)
  <e'-1 d''-4 e''-5> <eis'-1 e''-4 fis''-5>
}
@end lilypond

@item
Ahora las líneas de horizonte o Skylines tienen en cuenta la
propiedad de rotación (@code{rotation}) de los objetos de
presentación.  Por ejemplo, al rotar un regulador de crescendo
mediante la aplicación de @code{\override Hairpin.rotation = #'(15
0 0)}, se producirá una influencia real sobre las líneas de
horizonte, lo que será de ayuda para mejorar el espaciado.
@lilypond[quote]
#(ly:set-option 'debug-skylines #t)
\new PianoStaff <<
  \new Staff \relative {
    \override TextScript.rotation = #'(30 0 0)
    g4\<^\markup \ellipse "rot. ellipse" e' d'^\markup \box "rotated box" f\!
    \override Hairpin.rotation = #'(15 -1 0)
    g,,4\<^\markup \rounded-box "rounded box" e' d'^"no box" f\!
  }
  \new Staff \relative {
    \override Staff.Clef.rotation = #'(180 0 -0.036)
    <cis' ais'>4 c' g c
    \override Accidental.rotation = #'(30 0 0)
    <cis, ais'>2 e'4 e'
  }
>>
@end lilypond

@item
Se ha añadido un pequeño relleno entre los glifos de becuadro que
apenas tocan por la esquina en las cancelaciones de armadura.
@lilypond[verbatim,quote]
{
  \omit Staff.TimeSignature
  \key ces \major s1 \key c \major s
}
@end lilypond

@item
Las líneas de horizonte o Skylines de los rectángulos reflejan
ahora el trazo real del rectángulo, incluyendo las esquinas
redondeadas y cualquier rotación que presenten.
@lilypond[verbatim,quote]
#(ly:set-option 'debug-skylines #t)
{
  b'1^\markup \scale #'(2 . 1)
              \rotate #30
              \override #'(corner-radius . 3)
              \rounded-box \center-column { box skyline }
}
@end lilypond

@item
Se han añadido dos símbolos de adorno nuevos.
@lilypond[verbatim,quote]
{
  c''2\slashturn c''\haydnturn
}
@end lilypond

@item
Se han añadido a las fuentes tipográficas los glifos de los
corchetes y silencios de las figuras de semigarrapatea (1/256 de
redonda, con 6 corchetes o barras), así como de las de 1/512 y
1/1024, con 7 y 8 corchetes o barras respectivamente, que no
tienen nombre en español.
@lilypond[quote]
{
  \omit Staff.TimeSignature
  \cadenzaOn
  b4 8 16 32 64 128 256 512 1024 \bar "|"
  b''4 8 16 32 64 128 256 512 1024 \bar "|"
  r4 r8 r16 r32 r64 r128 r256 r512 r1024 \bar "|"
}
@end lilypond

@item
Se ha añadido una instrucción de matiz dinámico @code{\n} con el
significado de @emph{niente}.
@lilypond[quote]
{
  d'1~\mp\> 2 r\n
}
@end lilypond

@item
Ahora se pueden imprimir los diagramas invertidos de posiciones de
acordes para instrumentos de trastes, para personas zurdas,
configurando la propiedad @code{handedness} al valor @code{LEFT}
(como una subpropiedad de @code{fret-diagram-details}).
@lilypond[verbatim,quote]
\markup
  \center-column {
    "C"
    "(left-handed)"
     \override #`(fret-diagram-details . ((handedness . ,LEFT)))
     \fret-diagram "6-x;5-3-3;4-2-2;3-o;2-1;1-o;"
  }
@end lilypond

@item
EL procedimiento @code{output-classic-framework} y la opción
@code{-dclip-systems} están ahora disponibles con el backend
@code{SVG}.

@item
Se ha añadido una opción, @code{-dcrop}, que formatea la salida de
@code{SVG} y de @code{PDF} sin márgenes ni saltos de página.

@end itemize

@ifhtml
Para ver noticias anteriores, diríjase a
@uref{https://lilypond.org/doc/v2.20/Documentation/changes/},
@uref{https://lilypond.org/doc/v2.18/Documentation/changes/},
o @uref{../,vuelva} al índice de la documentación.


@end ifhtml

@bye
